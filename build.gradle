plugins {
	id 'babric-loom' version '1.1.+'
	id 'java'
}

configurations {
	includeInJar
}

group = project.mod_group
archivesBaseName = project.mod_name
version = project.mod_version

loom {
	gluedMinecraftJar()
	noIntermediateMappings()
	customMinecraftManifest.set("https://github.com/Turnip-Labs/bta-manifest-repo/releases/download/v${project.bta_version}/${project.bta_version}.json")
	runs {
		// Needed for https://github.com/FabricMC/fabric-loader/issues/712
		// Thanks for https://github.com/AntiquityMC/ClassicExampleMod for fix
		client {
			property 'fabric.gameVersion', "${project.bta_version}"
		}
		server {
			property 'fabric.gameVersion', "${project.bta_version}"
		}
	}
}

repositories {
	mavenCentral()
	maven { url = "https://jitpack.io" }
	maven {
		name = 'Babric'
		url = 'https://maven.glass-launcher.net/babric'
	}
	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net/'
	}
	maven {
        url 'https://jitpack.io'
    }
	ivy {
		url = "https://github.com/Better-than-Adventure"
		patternLayout {
			artifact "[organisation]/releases/download/v[revision]/[module].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/Turnip-Labs"
		patternLayout {
			artifact "[organisation]/releases/download/v[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/Turnip-Labs"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-bta-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://piston-data.mojang.com"
		patternLayout {
			artifact "v1/[organisation]/[revision]/[module].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/MartinSVK12"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
}

dependencies {
	minecraft "bta-download-repo:bta:${project.bta_version}"
	mappings loom.layered() {}

	implementation "com.github.electronstudio:sdl2gdx:1.0.3"
	includeInJar "com.github.electronstudio:sdl2gdx:1.0.3"
	implementation "net.dv8tion:JDA:5.0.0-beta.16"
	includeInJar "net.dv8tion:JDA:5.0.0-beta.16"
	implementation "club.minnced:discord-webhooks:0.8.4"
	includeInJar "club.minnced:discord-webhooks:0.8.4"
	includeInJar "com.google.code.gson:gson:2.8.9"

	modRuntimeOnly "objects:client:43db9b498cb67058d2e12d394e6507722e71bb45" // https://piston-data.mojang.com/v1/objects/43db9b498cb67058d2e12d394e6507722e71bb45/client.jar
	modImplementation "fabric-loader:fabric-loader:${project.loader_version}"

	// Helper library
	// If you do not need Halplibe you can comment this line out or delete this line
	modImplementation "com.github.Turnip-Labs:bta-halplibe:${project.halplibe_version}"

	modImplementation "ModMenu:ModMenu:2.0.0"

	implementation "org.slf4j:slf4j-api:1.8.0-beta4"
	implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.16.0"

	implementation 'com.google.guava:guava:30.0-jre'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

	var log4jVersion = "2.20.0"
	implementation("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	implementation("org.apache.logging.log4j:log4j-api:${log4jVersion}")
	implementation("org.apache.logging.log4j:log4j-1.2-api:${log4jVersion}")

    implementation group: 'com.github.micycle1', name: 'processing-core-4', version: 'latest.integration'
	// https://mvnrepository.com/artifact/org.jogamp.jogl/jogl-all-main
	implementation group: 'org.jogamp.jogl', name: 'jogl-all-main', version: '2.5.0-rc-20230523'
	// https://mvnrepository.com/artifact/org.jogamp.gluegen/gluegen-rt
	implementation group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: '2.5.0-rc-20230523'
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

tasks.withType(JavaCompile) {
	options.release.set 17
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
	from(configurations.named("includeInJar").get().collect { zipTree(it) })
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

processResources {
	inputs.property "version", version

	filesMatching("fabric.mod.json") {
		expand "version": version
	}
}

name: build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        java: [
          17,
        ]
        os: [ubuntu-20.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/
      - name: create GitHub release
        if: startsWith(github.ref, 'refs/tags/v') # Create a release only for tags starting with 'v'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: upload release assets
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: bta_utils-${{ matrix.os }}-${{ steps.get_version.outputs.mod_version }}.jar
          asset_path: build/libs/bta_utils-${{ steps.get_version.outputs.mod_version }}.jar
          asset_content_type: application/octet-stream

      - name: upload release source assets
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: bta_utils-${{ matrix.os }}-${{ steps.get_version.outputs.mod_version }}-sources.jar
          asset_path: build/libs/bta_utils-${{ steps.get_version.outputs.mod_version }}-sources.jar
          asset_content_type: application/octet-stream
